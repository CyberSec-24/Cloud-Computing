Kubernetes, also known as K8s, is an open-source, portable, extensible, orchestration platform developed by Google for managing containerized applications and microservices. 

Containers provide an efficient way for packaging and running applications.

In a real-time production environment, containers must be managed efficiently to bring downtime to zero. 

For example, if a container experiences failure, another container boots automatically. 

To overcome these issues, Kubernetes provides a resilient framework to manage distributed containers, generate deployment patterns, and perform failover and redundancy for applications


Features of Kubernetes:
▪ Service discovery: Kubernetes allows a service to be discovered via a DNS name or IP address.
▪ Load balancing: When a container receives heavy traffic, Kubernetes automatically distributes the traffic to other containers and performs load balancing.
▪ Storage orchestration: Kubernetes allows developers to mount their own storage capabilities, such as local and public cloud storage.
▪ Automated rollouts and rollbacks: Kubernetes automates the process of creating new containers, destroying existing containers, and moving all resources from one container to another.
▪ Automatic bin packing: Kubernetes can manage a cluster of nodes that run containerized applications. 
If you specify the resources needed to run the container, such as processing power and memory, Kubernetes can automatically allocate and deallocate resources to the containers


Kubernetes Cluster Architecture
When Kubernetes is deployed, clusters are generated.

A cluster is a group of computers known as nodes, which execute the applications inside the containers managed by Kubernetes.

A cluster comprises a minimum of one master node and one worker node. The worker nodes contain pods (a group of containers), and the master node manages them


 Master Components: 
The components of the master node provide a cluster control panel and perform various activities, such as scheduling, detecting, and handling cluster events.

These master components can be executed by any computer in the cluster. 

o Kube-apiserver: The API server is an integral part of the Kubernetes control panel that responds to all API requests. 
It serves as a front-end utility for the control panel and it is the only component that interacts with the etcd cluster and ensures data storage.

o Etcd cluster: It is a distributed and consistent key-value storage where Kubernetes cluster data, service discovery details, API objects, etc. are stored.

o Kube-scheduler: Kube-scheduler is a master component that scans newly generated pods and allocates a node for them. 
It assigns the nodes based on factors such as the overall resource requirement, data locality, software/hardware/policy restrictions, and internal workload interventions


o Kube-controller-manager: Kube-controller-manager is a master component that runs controllers. 
Controllers are generally individual processes (e.g., node controller, endpoint controller, replication controller, service account and token controller) but are combined into a single binary and run together in a single process to reduce complexity.

o cloud-controller-manager: This is the master component used to run controllers that communicate with cloud providers. 
Cloud-controller-manager enables the Kubernetes code and cloud provider code to evolve separately


▪ Node components: 
Node or worker components run on each node in the cluster, managing working pods and supplying the Kubernetes runtime services.

o Kubelet: Kubelet is an important service agent that runs on each node and ensures containers running in a pod.
It also ensures pods and containers are healthy and running as expected. Kubelet does not handle containers that are not generated by Kubernetes.
o Kube-proxy: It is a network proxy service that also runs on every worker node. This service maintains the network rules that enable network connection to the pods.
o Container Runtime: Container runtime is a software designed to run the containers.
Kubernetes supports various container runtimes, such as Docker, rktlet, containerd, and cri-o.














